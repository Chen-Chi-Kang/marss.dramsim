Index: TraceBasedSim.cpp
===================================================================
--- TraceBasedSim.cpp	(revision 257)
+++ TraceBasedSim.cpp	(working copy)
@@ -18,8 +18,11 @@
 using namespace DRAMSim;
 using namespace std;
 
-#ifndef _SIM_
-int SHOW_SIM_OUTPUT = 1; 
+#ifdef _SIM_
+int SHOW_SIM_OUTPUT = 0; 
+#else
+int SHOW_SIM_OUTPUT = 1;
+
 ofstream visDataOut; //mostly used in MemoryController
 
 void usage() 
@@ -130,9 +133,10 @@
 				if(useClockCycle)
 					{
 						istringstream b(ccStr);
+						cout << "ccStr = '" << ccStr <<"'"<<endl;
 						b>>clockCycle;
 					}
-				
+				cout << "clockCycle = " << clockCycle	<<endl;
 				break;
 			}
 		case misc:
@@ -338,7 +342,7 @@
 			traceFileName = pwdString + "/" +traceFileName;
 	}
 
-	DEBUG("== Loading trace file '"<<traceFileName<<"' == ");
+	DEBUGP("== Loading trace file '"<<traceFileName<<"' == ");
 
 	ifstream traceFile;
 	string line;
@@ -397,7 +401,7 @@
 								}
 							else
 								{
-									DEBUG("WARNING: Skipping line "<<lineNumber<< " ('" << line << "') in tracefile"); 
+									DEBUGP("WARNING: Skipping line "<<lineNumber<< " ('" << line << "') in tracefile"); 
 								}
 							lineNumber++;
 						}
Index: MemoryController.cpp
===================================================================
--- MemoryController.cpp	(revision 257)
+++ MemoryController.cpp	(working copy)
@@ -31,7 +31,7 @@
 	//NUM_DEVICES = (total_storage64*8) / (NUM_ROWS * NUM_COLS * DEVICE_WIDTH * NUM_BANKS);
 	NUM_DEVICES = ((TOTAL_STORAGE * 8) / ((long)NUM_ROWS * NUM_COLS * DEVICE_WIDTH * NUM_BANKS))/NUM_RANKS;
 
-	DEBUG ("NUM DEVICES="<<NUM_DEVICES);
+	DEBUGP ("NUM DEVICES="<<NUM_DEVICES);
 
 	//bus related fields
 	outgoingCmdPacket = NULL;
@@ -174,6 +174,7 @@
 						}
 
 					(*ranks)[outgoingDataPacket->rank].receiveFromBus((*outgoingDataPacket));
+					delete(outgoingDataPacket);
 					outgoingDataPacket=NULL;
 				}
 		}
Index: MemorySystem.cpp
===================================================================
--- MemorySystem.cpp	(revision 257)
+++ MemorySystem.cpp	(working copy)
@@ -36,7 +36,7 @@
 	//set ID
 	systemID = id;
 
-	DEBUG("===== MemorySystem "<<systemID<<" =====");
+	DEBUGP("===== MemorySystem "<<systemID<<" =====");
 
 	if (pwd.length() > 0) 
 	{
@@ -55,15 +55,15 @@
 
 
 
-	DEBUG("== Loading device model file '"<<deviceIniFilename<<"' == ");
+	DEBUGP("== Loading device model file '"<<deviceIniFilename<<"' == ");
 	IniReader::ReadIniFile(deviceIniFilename, false);
-	DEBUG("== Loading system model file '"<<systemIniFilename<<"' == ");
+	DEBUGP("== Loading system model file '"<<systemIniFilename<<"' == ");
 	IniReader::ReadIniFile(systemIniFilename, true);
 
 	//calculate the total storage based on the devices the user selected and the number of 
 	//  ranks in the system
 	TOTAL_STORAGE = (long)NUM_RANKS * NUM_ROWS * NUM_COLS * NUM_BANKS * DEVICE_WIDTH / 8 * (JEDEC_DATA_BUS_WIDTH / DEVICE_WIDTH);
-	DEBUG("TOTAL_STORAGE : "<<TOTAL_STORAGE);
+	DEBUGP("TOTAL_STORAGE : "<<TOTAL_STORAGE);
 
 	IniReader::InitEnumsFromStrings();
 	if (!IniReader::CheckIfAllSet())
@@ -117,7 +117,7 @@
 
 MemorySystem::~MemorySystem() 
 {
-//	DEBUG("MEMORY SYSTEM DESTRUCTOR with ID "<<systemID);
+//	DEBUGP("MEMORY SYSTEM DESTRUCTOR with ID "<<systemID);
 	delete(memoryController);
 	ranks->clear();
 	delete(ranks);
@@ -203,7 +203,7 @@
 	{
 		if (errno == ENOENT) 
 		{
-			DEBUG("\t directory doesn't exist, trying to create ...");
+			DEBUGP("\t directory doesn't exist, trying to create ...");
 			if (mkdir(path.c_str(), mode) != 0) 
 			{
 				perror("Error Has occurred while trying to make directory: ");
@@ -220,7 +220,7 @@
 		}
 	  	else 
 		{
-			//DEBUG("GREAT SUCCESS!");
+			//DEBUGP("GREAT SUCCESS!");
 		}
 	}
 }
Index: SystemConfiguration.h
===================================================================
--- SystemConfiguration.h	(revision 257)
+++ SystemConfiguration.h	(working copy)
@@ -15,10 +15,10 @@
 #define ERROR(str) std::cerr<<"[ERROR ("<<__FILE__<<":"<<__LINE__<<")]: "<<str<<std::endl;
 
 #ifdef DEBUG_BUILD
-	#define DEBUG(str)  std::cout<< str <<std::endl;
+	#define DEBUGP(str)  std::cout<< str <<std::endl;
 	#define DEBUGN(str) std::cout<< str;
 #else
-	#define DEBUG(str) ;
+	#define DEBUGP(str) ;
 	#define DEBUGN(str) ;
 #endif
 
@@ -28,9 +28,9 @@
 	#define PRINT(str)  if(SHOW_SIM_OUTPUT) { std::cerr <<str<<std::endl; }
 	#define PRINTN(str) if(SHOW_SIM_OUTPUT) { std::cerr <<str; }
 #else
-	#undef DEBUG
+	#undef DEBUGP
 	#undef DEBUGN
-	#define DEBUG(str) ;
+	#define DEBUGP(str) ;
 	#define DEBUGN(str) ;
 	#define PRINT(str) ;
 	#define PRINTN(str) ;
Index: CommandQueue.cpp
===================================================================
--- CommandQueue.cpp	(revision 257)
+++ CommandQueue.cpp	(working copy)
@@ -1021,7 +1021,7 @@
     }
   else 
   {
-	  DEBUG("Invalid Queueing Stucture");
+	  DEBUGP("Invalid Queueing Stucture");
 	  abort();
   }
 }
Index: Makefile
===================================================================
--- Makefile	(revision 257)
+++ Makefile	(working copy)
@@ -1,4 +1,7 @@
-CXXFLAGS= -O0 -DDEBUG_BUILD 
+
+CXXFLAGS= -g -O0 -DDEBUG_BUILD -DNO_STORAGE
+LIBCXXFLAGS = -O3 -ffast-math -DNO_STORAGE -D_SIM_ -fPIC
+
 #CXXFLAGS= -O3 -DNO_OUTPUT -DNO_STORAGE -Wall
 
 
@@ -16,13 +19,14 @@
 LIB_NAME=libdramsim.so
 
 SRC = $(wildcard *.cpp)
-OBJ = $(addsuffix .o, $(basename $(SRC)))
+OBJ = $(subst MBoBController.o,,$(addsuffix .o, $(basename $(SRC))))
 MBOBOBJ = $(subst TraceBasedSim.o,,${OBJ})
 MBOBOBJ += MBOBSim.o
 POBJ = $(addsuffix .po, $(basename $(SRC)))
 REBUILDABLES=$(OBJ) ${POBJ} $(EXE_NAME) $(LIB_NAME) MBOBSim.o
 
-all: ${EXE_NAME} ${MBOB_EXE}
+all: ${EXE_NAME}
+#dont build mbob for now ${MBOB_EXE}
 
 #   $@ target name, $^ target deps, $< matched pattern
 $(EXE_NAME): $(OBJ)
@@ -53,6 +57,6 @@
 	@echo "Built $@ successfully"
 
 %.po : %.cpp
-	g++ -O3 -ffast-math -fPIC -DNO_OUTPUT -DNO_STORAGE -o $@ -c $<
+	g++ ${LIBCXXFLAGS} -o $@ -c $<
 clean: 
 	rm -f ${REBUILDABLES} *.dep ${MBOB_EXE}
Index: DRAMSim.h
===================================================================
--- DRAMSim.h	(revision 257)
+++ DRAMSim.h	(working copy)
@@ -5,13 +5,26 @@
  * provide all necessary functionality to talk to an external simulator 
  */
 #include "Callback.h"
+#include <string>
+#include <stdint.h>
 using std::string;
 
 namespace DRAMSim 
 {
-    typedef CallbackBase<void,uint,uint64_t,uint64_t> Callback_t;
-	class MemorySystem
+
+	typedef CallbackBase<void,uint,uint64_t,uint64_t> Callback_t;
+
+	class SimulatorObject
 	{
+	public:
+		uint64_t currentClockCycle;
+		
+		void step();
+		virtual void update()=0;
+	};
+
+	class MemorySystem : public SimulatorObject
+	{
 		public:
 			MemorySystem(uint id, string dev, string sys, string pwd, string trc);
 			bool addTransaction(bool isWrite, uint64_t addr);
Index: IniReader.cpp
===================================================================
--- IniReader.cpp	(revision 257)
+++ IniReader.cpp	(working copy)
@@ -165,7 +165,7 @@
 
 	void IniReader::WriteValuesOut(std::ofstream &visDataOut) 
 	{
-		//DEBUG("WRITE CALLED");
+		//DEBUGP("WRITE CALLED");
 		visDataOut<<"!!SYSTEM_INI"<<endl;
 		for (size_t i=0; configMap[i].variablePtr != NULL; i++) 
 		{
@@ -258,7 +258,7 @@
 						*((uint *)configMap[i].variablePtr) = intValue;
 						if (DEBUG_INI_READER)
 						{
-							DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<intValue);
+							DEBUGP("\t - SETTING "<<configMap[i].iniKey<<"="<<intValue);
 						}
 					break;
 					case UINT64:
@@ -269,7 +269,7 @@
 						*((uint64_t *)configMap[i].variablePtr) = int64Value;
 						if (DEBUG_INI_READER)
 						{
-							DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<int64Value);
+							DEBUGP("\t - SETTING "<<configMap[i].iniKey<<"="<<int64Value);
 						}
 					break;
 					case FLOAT:
@@ -280,14 +280,14 @@
 						*((float *)configMap[i].variablePtr) = floatValue;
 						if (DEBUG_INI_READER)
 						{
-							DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<floatValue);
+							DEBUGP("\t - SETTING "<<configMap[i].iniKey<<"="<<floatValue);
 						}
 					break;
 					case STRING:
 						*((string *)configMap[i].variablePtr) = string(valueString);
 						if (DEBUG_INI_READER)
 						{
-							DEBUG("\t - SETTING "<<configMap[i].iniKey<<"="<<valueString);
+							DEBUGP("\t - SETTING "<<configMap[i].iniKey<<"="<<valueString);
 						}
 
 					break;
@@ -303,11 +303,11 @@
 				{
 					if (isSystemParam && configMap[i].parameterType == DEV_PARAM) 
 					{
-						DEBUG("WARNING: Found device parameter "<<configMap[i].iniKey<<" in system config file");
+						DEBUGP("WARNING: Found device parameter "<<configMap[i].iniKey<<" in system config file");
 					} 
 					else if (!isSystemParam && configMap[i].parameterType == SYS_PARAM) 
 					{
-						DEBUG("WARNING: Found system parameter "<<configMap[i].iniKey<<" in device config file");
+						DEBUGP("WARNING: Found system parameter "<<configMap[i].iniKey<<" in device config file");
 					}
 				}
 				// use the pointer stored in the config map to set the value of the variable
@@ -319,7 +319,7 @@
 
 		if (configMap[i].variablePtr == NULL) 
 		{
-			DEBUG("WARNING: UNKNOWN KEY '"<<key<<"' IN INI FILE");
+			DEBUGP("WARNING: UNKNOWN KEY '"<<key<<"' IN INI FILE");
 		}
 	}
 
@@ -348,7 +348,7 @@
 				// skip zero-length lines
 				if (line.size() == 0)
 				{
-//					DEBUG("Skipping blank line "<<lineNumber);
+//					DEBUGP("Skipping blank line "<<lineNumber);
 					continue;
 				}
 				//search for a comment char
@@ -357,10 +357,10 @@
 					//if the comment char is the first char, ignore the whole line
 					if (commentIndex == 0) 
 					{
-//						DEBUG("Skipping comment line "<<lineNumber);
+//						DEBUGP("Skipping comment line "<<lineNumber);
 						continue;
 					}
-//					DEBUG("Truncating line at comment"<<line[commentIndex-1]);
+//					DEBUGP("Truncating line at comment"<<line[commentIndex-1]);
 					//truncate the line at first comment before going on
 					line = line.substr(0,commentIndex); 
 				}
@@ -413,7 +413,7 @@
 		{
 			if (!configMap[i].wasSet) 
 			{
-				DEBUG("WARNING: KEY "<<configMap[i].iniKey<<" NOT FOUND IN INI FILE.");
+				DEBUGP("WARNING: KEY "<<configMap[i].iniKey<<" NOT FOUND IN INI FILE.");
 				switch (configMap[i].variableType) 
 				{
 					//the string and bool values can be defaulted, but generally we need all the numeric values to be set to continue
@@ -425,7 +425,7 @@
 					break;
 					case BOOL:
 						*((bool *)configMap[i].variablePtr) = false;
-						DEBUG("\tSetting Default: "<<configMap[i].iniKey<<"=false");
+						DEBUGP("\tSetting Default: "<<configMap[i].iniKey<<"=false");
 					break;
 					case STRING:
 					break;
@@ -437,22 +437,22 @@
 	void IniReader::InitEnumsFromStrings() {
 		if (ADDRESS_MAPPING_SCHEME == "scheme1") {
 			addressMappingScheme = Scheme1;
-			DEBUG("ADDR SCHEME: 1");
+			DEBUGP("ADDR SCHEME: 1");
 		} else if (ADDRESS_MAPPING_SCHEME == "scheme2") {
 			addressMappingScheme = Scheme2;
-			DEBUG("ADDR SCHEME: 2");
+			DEBUGP("ADDR SCHEME: 2");
 		} else if (ADDRESS_MAPPING_SCHEME == "scheme3") {
 			addressMappingScheme = Scheme3;
-			DEBUG("ADDR SCHEME: 3");
+			DEBUGP("ADDR SCHEME: 3");
 		} else if (ADDRESS_MAPPING_SCHEME == "scheme4") {
 			addressMappingScheme = Scheme4;
-			DEBUG("ADDR SCHEME: 4");
+			DEBUGP("ADDR SCHEME: 4");
 		} else if (ADDRESS_MAPPING_SCHEME == "scheme5") {
 			addressMappingScheme = Scheme5;
-			DEBUG("ADDR SCHEME: 5");
+			DEBUGP("ADDR SCHEME: 5");
 		} else if (ADDRESS_MAPPING_SCHEME == "scheme6") {
 			addressMappingScheme = Scheme6;
-			DEBUG("ADDR SCHEME: 6");
+			DEBUGP("ADDR SCHEME: 6");
 		} else {
 			cout << "WARNING: unknown address mapping scheme '"<<ADDRESS_MAPPING_SCHEME<<"'; valid values are 'scheme1', 'scheme2', 'scheme3', 'scheme4', 'scheme5'. Defaulting to scheme1"<<endl;
 			addressMappingScheme = Scheme1;
@@ -460,10 +460,10 @@
 
 		if (ROW_BUFFER_POLICY == "open_page") {
 			rowBufferPolicy = OpenPage;
-			DEBUG("ROW BUFFER: open page");
+			DEBUGP("ROW BUFFER: open page");
 		} else if (ROW_BUFFER_POLICY == "close_page") {
 			rowBufferPolicy = ClosePage;
-			DEBUG("ROW BUFFER: close page");
+			DEBUGP("ROW BUFFER: close page");
 		} else {
 			cout << "WARNING: unknown row buffer policy '"<<ROW_BUFFER_POLICY<<"'; valid values are 'open_page' or 'close_page', Defaulting to Close Page."<<endl;
 			rowBufferPolicy = ClosePage;
@@ -471,10 +471,10 @@
 
 		if (QUEUING_STRUCTURE == "per_rank_per_bank") {
 			queuingStructure = PerRankPerBank;
-			DEBUG("QUEUING STRUCT: per rank per bank");
+			DEBUGP("QUEUING STRUCT: per rank per bank");
 		} else if (QUEUING_STRUCTURE == "per_rank") {
 			queuingStructure = PerRank;
-			DEBUG("QUEUING STRUCT: per rank");
+			DEBUGP("QUEUING STRUCT: per rank");
 		} else {
 			cout << "WARNING: Unknown queueing structure '"<<QUEUING_STRUCTURE<<"'; valid options are 'per_rank' and 'per_rank_per_bank', defaulting to Per Rank Per Bank"<<endl;
 			queuingStructure = PerRankPerBank;
@@ -482,10 +482,10 @@
 
 		if (SCHEDULING_POLICY == "rank_then_bank_round_robin") {
 			schedulingPolicy = RankThenBankRoundRobin;
-			DEBUG("SCHEDULING: Rank Then Bank");
+			DEBUGP("SCHEDULING: Rank Then Bank");
 		} else if (SCHEDULING_POLICY == "bank_then_rank_round_robin") {
 			schedulingPolicy = BankThenRankRoundRobin;
-			DEBUG("SCHEDULING: Bank Then Rank");
+			DEBUGP("SCHEDULING: Bank Then Rank");
 		} else {
 			cout << "WARNING: Unknown scheduling policy '"<<SCHEDULING_POLICY<<"'; valid options are 'rank_then_bank_round_robin' or 'bank_then_rank_round_robin'; defaulting to Bank Then Rank Round Robin" << endl;
 			schedulingPolicy = BankThenRankRoundRobin;
Index: Bank.cpp
===================================================================
--- Bank.cpp	(revision 257)
+++ Bank.cpp	(working copy)
@@ -53,7 +53,7 @@
 	if ((foundNode = Bank::searchForRow(busPacket.row, rowHeadNode)) == NULL)
 	{
 		// the row hasn't been written before, so it isn't in the list 
-		//if(SHOW_SIM_OUTPUT) DEBUG("== Warning - Read from previously unwritten row " << busPacket.row);
+		//if(SHOW_SIM_OUTPUT) DEBUGP("== Warning - Read from previously unwritten row " << busPacket.row);
 		void *garbage = calloc(BL * JEDEC_DATA_BUS_WIDTH,1);
 		((long *)garbage)[0] = 0xdeadbeef; // tracer value
 		busPacket.data = garbage;
Index: system.ini
===================================================================
--- system.ini	(revision 257)
+++ system.ini	(working copy)
@@ -1,10 +1,10 @@
-NUM_RANKS=2
+NUM_RANKS=1
 NUM_CHANS=1								; we haven't tested a whole lot with CHANS>1 so use at your own peril 
 JEDEC_DATA_BUS_WIDTH=64 			; will never change for DDR parts
-CACHE_LINE_SIZE=8						; should never change for a normal CPU (in bytes)
+CACHE_LINE_SIZE=64						; should never change for a normal CPU (in bytes)
 TRANS_QUEUE_DEPTH=8					; transaction queue ex: READ 0xbeef
 CMD_QUEUE_DEPTH=8						; command queue ex: RAS 4
-EPOCH_COUNT=10000						; length of an epoch in cycles (granularity of simulation)
+EPOCH_COUNT=50000						; length of an epoch in cycles (granularity of simulation)
 ROW_BUFFER_POLICY=open_page 		; close_page or open_page
 ADDRESS_MAPPING_SCHEME=scheme2	;valid schemes 1-4
 SCHEDULING_POLICY=rank_then_bank_round_robin  ; rank_then_bank_round_robin or rank_then_bank_round_robin 
Index: MemorySystem.h
===================================================================
--- MemorySystem.h	(revision 257)
+++ MemorySystem.h	(working copy)
@@ -7,7 +7,6 @@
 //
 
 #include "SimulatorObject.h"
-#include "SystemConfiguration.h"
 #include "MemoryController.h"
 #include "Rank.h"
 #include "Transaction.h"
